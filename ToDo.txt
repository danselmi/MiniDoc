Open points:
A) Speed; in MiniStyledTextCtrl::SetMarker() this is where most of the cpu time is used.

D) C::B
how to manage the usage of the indicators and markers? Is it needed?
MiniStyledTextCtrl has to follow changes in different plugins to "mimic" cbEditors control colors.
(incremental search and highlighter)
Changing their configuration needs a restart of MiniDoc plugin to become colored the same.
Any plugin can "use" any marker/indicator number.





Optimization)
(no measurable improvement)
    if(forceUdate)
    {
        MarkerDeleteAll(GetOurMarkerNumber());
        if (inverseMarker_)
        {
            for (int l = visibleFrom_; l < visibleFrom_+visibleLength_ ; ++l)
                MarkerAdd(l, GetOurMarkerNumber());
        }
        else
        {
            for (int l = 0; l < visibleFrom_ ; ++l)
                MarkerAdd(l, GetOurMarkerNumber());
            for (int l = visibleFrom_+visibleLength_; l < GetLineCount() ; ++l)
                MarkerAdd(l, GetOurMarkerNumber());
        }

    }
    else // only change marker as needed in SetMarker()
    {
        if (inverseMarker_)
        {
            for(int l = oldvisibleFrom_ ; l < visibleFrom_ && l < oldvisibleFrom_+oldvisibleLength_ ; ++l)
                MarkerDelete(l, markerNumber);

            for (int l = visibleFrom_; l < visibleFrom_+visibleLength_ ; ++l)
                MarkerAdd(l, markerNumber);

            for(int l = visibleFrom_+visibleLength_ ; l < oldvisibleFrom_+oldvisibleLength_ ; ++l)
                MarkerDelete(l, markerNumber);
        }
        else
        {
            for(int l = visibleFrom_ ; l < oldvisibleFrom_ ; ++l)
                MarkerDelete(l, markerNumber);
            for (int l = oldvisibleFrom_; l < visibleFrom_ ; ++l)
                MarkerAdd(l, markerNumber);

            for (int l = oldvisibleFrom_+oldvisibleLength_; l < visibleFrom_+visibleLength_ ; ++l)
                MarkerDelete(l, markerNumber);
            for (int l = visibleFrom_+visibleLength_; l < oldvisibleFrom_+oldvisibleLength_ ; ++l)
                MarkerAdd(l, markerNumber);
        }
    }
